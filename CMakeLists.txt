cmake_minimum_required(VERSION 3.20)
project(CHTL LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

option(CHTL_BUILD_TESTS "Build tests" ON)
option(CHTL_ENABLE_ASAN "Enable AddressSanitizer" OFF)
option(CHTL_ENABLE_UBSAN "Enable UndefinedBehaviorSanitizer" OFF)
option(CHTL_ENABLE_LTO "Enable Link Time Optimization" OFF)

if(CMAKE_CXX_COMPILER_ID MATCHES "Clang|GNU")
  add_compile_options(-Wall -Wextra -Wpedantic)
elseif(MSVC)
  add_compile_options(/W4)
endif()

if(CHTL_ENABLE_ASAN AND (CMAKE_CXX_COMPILER_ID MATCHES "Clang|GNU"))
  add_link_options(-fsanitize=address)
  add_compile_options(-fsanitize=address)
endif()

if(CHTL_ENABLE_UBSAN AND (CMAKE_CXX_COMPILER_ID MATCHES "Clang|GNU"))
  add_link_options(-fsanitize=undefined)
  add_compile_options(-fsanitize=undefined)
endif()

if(CHTL_ENABLE_LTO)
  include(CheckIPOSupported)
  check_ipo_supported(RESULT ipo_supported OUTPUT ipo_output)
  if(ipo_supported)
    set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
  endif()
endif()

add_subdirectory(Util)
add_subdirectory(Core)
add_subdirectory(Scanner)
add_subdirectory(CHTL)
add_subdirectory(CHTL_JS)
add_subdirectory(CodeMerger)
add_subdirectory(CompilerDispatcher)
add_subdirectory(ThirdParty)
add_subdirectory(cli)

if(CHTL_BUILD_TESTS)
  enable_testing()
  add_subdirectory(Test)
endif()
