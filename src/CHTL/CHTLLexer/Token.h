#pragma once

#include <string>

enum class TokenType {
    // Placeholders for various token types
    IDENTIFIER,
    CLASS_SELECTOR,
    ID_SELECTOR,
    CONTEXT_SELECTOR,
    PROPERTY_REFERENCE,
    NUMBER,
    LEFT_BRACE,
    RIGHT_BRACE,
    LEFT_PAREN,
    RIGHT_PAREN,
    LEFT_BRACKET,
    RIGHT_BRACKET,
    AT_SIGN,
    DOT,
    PLUS,
    MINUS,
    STAR,
    SLASH,
    PERCENT,
    POWER,
    GREATER,
    LESS,
    GREATER_EQUAL,
    LESS_EQUAL,
    EQUAL_EQUAL,
    NOT_EQUAL,
    LOGICAL_AND,
    LOGICAL_OR,
    QUESTION_MARK,
    SEMICOLON,
    COLON,
    EQUALS,
    STRING_LITERAL,
    KEYWORD_TEXT,
    KEYWORD_STYLE,
    KEYWORD_SCRIPT,
    KEYWORD_IMPORT,
    KEYWORD_TEMPLATE,
    KEYWORD_CUSTOM,
    KEYWORD_ORIGIN,
    KEYWORD_NAMESPACE,
    KEYWORD_FROM,
    KEYWORD_AS,
    KEYWORD_INHERIT,
    KEYWORD_DELETE,
    KEYWORD_INSERT,
    KEYWORD_AFTER,
    KEYWORD_BEFORE,
    KEYWORD_REPLACE,
    KEYWORD_ATTOP,
    KEYWORD_ATBOTTOM,
    KEYWORD_USE,
    KEYWORD_HTML5,
    KEYWORD_CONFIG,
    KEYWORD_NAME,
    KEYWORD_EXCEPT,
    SINGLE_LINE_COMMENT,
    MULTI_LINE_COMMENT,
    GENERATOR_COMMENT,
    END_OF_FILE,
    UNKNOWN
};

struct Token {
    TokenType type;
    std::string value;
    int line;
    int column;
};